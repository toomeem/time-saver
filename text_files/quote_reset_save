		log_command("quote reset")
		if str(author)!="toomeem#0389":
			await channel.send("You do not have permission to reset the quote storage")
			return
		time.sleep(.5)
		await channel.send("Retreiving quotes")
		with open("text_files/filler") as filler_file:
			filler=filler_file.readlines()
		quote_link_bases=[
		    "death","family","history","humor","inspirational","power",
		    "respect","future","dating"]
		quote_link_suffixes=[
		    "","_2","_3","_4","_5","_6","_7","_8","_9","_10","_11",
		    "_12","_13","_14","_15","_16","_17"]
		quote_list=[]
		rate_wait=.5
		for quote_base in quote_link_bases:
			for quote_suffix in quote_link_suffixes:
				if quote_base=="Family" and quote_suffix=="_8":
					await channel.send("25% complete")
				elif quote_base=="Humor" and quote_suffix=="_12":
					await channel.send("50% complete")
				elif quote_base=="Power" and quote_suffix=="_16":
					await channel.send("75% complete")
				url=f"https://www.brainyquote.com/topics/{quote_base}-quotes{quote_suffix}"
				quote_page=requests.get(url)
				time.sleep(rate_wait)
				if quote_page.status_code==429:
					rate_wait+=.5
					await channel.send("Rate-limited")
					await channel.send(f"Waiting {rate_wait} seconds between requests")
				elif quote_page.status_code!=404:
					quote_soup=str(BeautifulSoup(quote_page.content,"html.parser").get_text()).split("Prev")[0].split("\n")
					quote_text=[i for i in quote_soup if i.count(" ")>3][3:]
				for i in quote_text:
					if quote_list.count(i)==0 and i not in filler:
						quote_list.append(i)
		quote_list=list(set(quote_list))
		random.shuffle(quote_list)
		with open("text_files/quotes","w") as quotes_file:
			for i in quote_list:
				quotes_file.write(f"{i}\n")
		await channel.send("100% complete")
		await channel.send(f"You now have {len(quote_list)} quotes in stock")
